<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                         classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                         http://www.springframework.org/schema/tx
                         classpath:/org/springframework/transaction/config/spring-tx-3.0.xsd">


    <!-- ********************************************************************** -->
    <!-- * JDBC SETTINGS ****************************************************** -->
    <!-- ********************************************************************** -->

    <!-- Configurer that replaces ${...} placeholders with values from properties 
        files -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/facebookservice@jdbc.properties</value>
            </list>
        </property>
        <property name="properties">
            <bean class="com.meinc.launcher.serverprops.ServerPropertyHolder"
                factory-method="getProps" />
        </property>
    </bean>

  <bean id="dataSource" class="com.meinc.bonecp.BoneCpDataSource" factory-method="getInstance" />

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- SqlMap setup for iBATIS Database Layer -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:/facebookservice@sql-map-config.xml"/>
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
    
    <!-- - A parent bean definition which is a base definition for transaction 
        proxies. - It's marked as abstract, since it's not supposed to be instantiated 
        itself. - We set shared transaction attributes here, following our naming 
        patterns. - The attributes can still be overridden in child bean definitions. -->
    <bean id="baseTransactionProxy"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
        abstract="true">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_NESTED</prop> <!-- ,readOnly -->
            </props>
        </property>
    </bean>

    <!-- <bean name="commons"
          class="com.meinc.commons.PhoenixCommonsFactory"
          factory-method="getInstance">
    </bean> -->

    <bean id="facebookServiceProxy" parent="baseTransactionProxy">
        <property name="target">
            <ref bean="facebookServiceDelegator"></ref>
        </property>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="facebookDaoMapper">
        <property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
        <property name="mapperInterface" value="com.meinc.facebook.dao.IFacebookServiceDaoMapper" />
    </bean>

    <bean id="dao" class="com.meinc.facebook.dao.FacebookServiceDaoSqlMap">
        <property name="mapper" ref="facebookDaoMapper" />
    </bean>
    
    <bean id="facebookServiceDelegator" class="com.meinc.facebook.service.delegator.FacebookService">
        <property name="facebookServiceDelegate" ref="facebookServiceDelegate" />
    </bean>

    <beans profile="!loadtest">
        <bean id="facebookServiceDelegate" class="com.meinc.facebook.service.FacebookService">
            <!-- <property name="commons" ref="commons" /> -->
            <property name="dao" ref="dao" />
            <!-- <property name="applicationId"  value="${facebook.app_id}" /> -->
            <property name="appSecret" value="${facebook.app_secret}" />
            <property name="facebookApiUrl" value="https://graph.facebook.com" />
        </bean>
    </beans>

    <beans profile="loadtest">
        <bean id="facebookServiceDelegate" class="com.meinc.facebook.service.FacebookLoadtestService">
            <!-- <property name="commons" ref="commons" /> -->
            <property name="dao" ref="dao" />
            <!-- <property name="applicationId"  value="${facebook.app_id}" /> -->
            <property name="appSecret" value="${facebook.app_secret}" />
            <property name="facebookApiUrl" value="https://graph.facebook.com" />
        </bean>
    </beans>
</beans>
