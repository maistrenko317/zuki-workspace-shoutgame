package com.shout.rpmextractor;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.util.HashSet;
import java.util.Set;

//based on: https://crunchify.com/how-to-run-windowsmac-commands-in-java-and-return-the-text-result/
public class ProcessOutputter
extends Thread
{
    private InputStream _is;
    private PrintStream _ps;
    private Set<String> _fileExtensionsFromTarExtraction = new HashSet<>(); //very specific, not for general use, but neede for my specific use case

    public ProcessOutputter(InputStream is, PrintStream ps)
    {
        _is = is;
        _ps = ps;
    }

    @Override
    public void run()
    {
        String s = null;
        BufferedReader br = new BufferedReader(new InputStreamReader(_is));
        try {
            while ((s = br.readLine()) != null) {
                _ps.println(s);

                if (s.startsWith("x")) {
                    String[] parts = s.split("\\.");
                    _fileExtensionsFromTarExtraction.add(parts[parts.length-1]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace(System.err);
        }
    }
}
